{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_login_page = _resolveComponent(\"login-page\");\n  return _openBlock(), _createBlock(_component_login_page, {\n    \"current-input\": _ctx.currentInput,\n    \"check-user\": _ctx.checkUser\n  }, null, 8 /* PROPS */, [\"current-input\", \"check-user\"]);\n}","map":{"version":3,"names":["_createBlock","_component_login_page","_ctx","currentInput","checkUser"],"sources":["/home/nate/Documents/repos/Admin-Dashboard-santimpay/admin-dashboard/src/App.vue"],"sourcesContent":["<template v-if=\"users\">\n    <login-page\n      :current-input=\"currentInput\" \n      :check-user= \"checkUser\"\n    ></login-page>\n</template>\n<script>\nimport LoginPage from \"./components/LoginPage.vue\";\n\nexport default {\n    name: \"App\",\n    data() {\n        return {\n            users: [],\n            currentInput: {\n              accountName: \"\",\n              accountPassword: \"\"\n            },\n            userIndex: NaN,\n            pageNo\n        };\n    },\n    created() {\n      this.getPages();\n    },\n    components: {\n        LoginPage,\n    },\n    methods: {\n        async getPages() {\n            let res = await fetch(\"users.json\");\n            let data = await res.json();\n\n            this.users = data;\n        },\n        checkUser(name, pass) {\n          this.users.forEach((user, index) => {\n            let correctInput = false;\n            if ((user.email == name || user.phoneNumber == name) && user.password == pass) {\n              this.userIndex = index;\n              correctInput = true;\n            }\n\n            if(!correctInput) {\n              alert(\"incorrect input\")\n            } else {\n              this.\n            }\n          })\n        }\n    },\n};\n</script>\n"],"mappings":";;;uBACIA,YAAA,CAGcC,qBAAA;IAFX,eAAa,EAAEC,IAAA,CAAAC,YAAY;IAC3B,YAAU,EAAGD,IAAA,CAAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}