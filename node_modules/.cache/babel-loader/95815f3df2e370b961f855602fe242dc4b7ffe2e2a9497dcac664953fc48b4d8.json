{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_login_page = _resolveComponent(\"login-page\");\n  const _component_dashboard = _resolveComponent(\"dashboard\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.pageNo == 0 ? (_openBlock(), _createBlock(_component_login_page, {\n    key: 0,\n    \"current-input\": $data.currentInput,\n    \"check-user\": $options.checkUser\n  }, null, 8 /* PROPS */, [\"current-input\", \"check-user\"])) : _createCommentVNode(\"v-if\", true), $options.user ? (_openBlock(), _createBlock(_component_dashboard, {\n    key: 1,\n    user: $options.user,\n    \"edit-user\": $options.editUser\n  }, null, 8 /* PROPS */, [\"user\", \"edit-user\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","$data","pageNo","_createBlock","_component_login_page","key","currentInput","$options","checkUser","_createCommentVNode","user","_component_dashboard","editUser"],"sources":["/home/nate/Documents/repos/Admin-Dashboard-santimpay/admin-dashboard/src/App.vue"],"sourcesContent":["<template v-if=\"users\">\n    <login-page\n      :current-input=\"currentInput\" \n      :check-user= \"checkUser\"\n      v-if=\"pageNo == 0\"\n    ></login-page>\n    <dashboard\n      v-if=\"user\"\n      :user=\"user\"\n      :edit-user=\"editUser\"\n    ></dashboard>\n</template>\n\n<script>\nimport LoginPage from \"./components/LoginPage.vue\";\nimport Dashboard from \"./components/Dashboard.vue\";\n\nexport default {\n    name: \"App\",\n    components: {\n        LoginPage,\n        Dashboard\n    },\n    data() {\n        return {\n            users: [],\n            currentInput: {\n              accountName: \"\",\n              accountPassword: \"\"\n            },\n            userIndex: 0,\n            pageNo: 1\n        };\n    },\n    created() {\n      this.getPages();\n    },\n    computed: {\n      user() {\n        return this.users[this.userIndex];\n      }\n    },\n    methods: {\n        async getPages() {\n            let res = await fetch(\"users.json\");\n            let data = await res.json();\n\n            this.users = data;\n        },\n        checkUser(name, pass) {\n          this.users.forEach((user, index) => {\n            let correctInput = false;\n            if ((user.email == name || user.phoneNumber == name) && user.password == pass) {\n              this.userIndex = index;\n              correctInput = true;\n            }\n\n            if(!correctInput) {\n              alert(\"incorrect input\")\n            } else {\n              this.pageNo = 1;\n            }\n          })\n        },\n        editUser(index, option) {\n          console.log(this.users);\n          if (option === \"delete\") {\n            this.user.allTickets.splice(index,1);\n          }\n          console.log(this.users);\n        }\n    },\n};\n</script>\n"],"mappings":";;;;uBAAAA,mBAAA,CAAAC,SAAA,SAIYC,KAAA,CAAAC,MAAM,S,cAHdC,YAAA,CAIcC,qBAAA;IALlBC,GAAA;IAEO,eAAa,EAAEJ,KAAA,CAAAK,YAAY;IAC3B,YAAU,EAAGC,QAAA,CAAAC;8DAHpBC,mBAAA,gBAOYF,QAAA,CAAAG,IAAI,I,cADZP,YAAA,CAIaQ,oBAAA;IAVjBN,GAAA;IAQOK,IAAI,EAAEH,QAAA,CAAAG,IAAI;IACV,WAAS,EAAEH,QAAA,CAAAK;oDATlBH,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}