{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ticket-only\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1"],"sources":["/home/nate/Documents/repos/Admin-Dashboard-santimpay/admin-dashboard/src/components/TicketsContent.vue"],"sourcesContent":["<template>\n  <div class=\"ticket-only\">\n\n  </div>\n    \n</template>\n\n<script>\nimport { useAttrs } from \"vue\";\nimport Modal from \"./Modal.vue\";\n\nexport default {\n    components: {\n        Modal,\n    },\n    props: [\"user\", \"editUser\", \"addEvent\"],\n    data() {\n        return {\n            clickedOptions: NaN,\n            pageNo: 0,\n            modalOn: false,\n            editOn: false,\n            edit: {\n                eventName: \"\",\n                contactName: \"\",\n                phoneNumber: \"\",\n                maxTickets: \"\",\n                description: \"\",\n                location: \"\",\n                status: \"\",\n            },\n        };\n    },\n    computed: {\n        totalNumberOfPages() {\n            return Math.floor((this.user.allTickets.length - 1) / 5);\n        },\n        notFilled() {\n            return (\n                !this.edit.eventName ||\n                !this.edit.contactName ||\n                !this.edit.phoneNumber ||\n                !this.edit.maxTickets ||\n                !this.edit.description ||\n                !this.edit.location ||\n                !this.edit.status\n            );\n        },\n        navArray() {\n            let arr = [];\n            for (let i = 0; i < this.totalNumberOfPages + 1; i++) {\n                arr.push(i);\n            }\n            return arr;\n        },\n    },\n    methods: {\n        clickOptions(no) {\n            if (this.clickedOptions == no) {\n                this.clickedOptions = 6;\n            } else {\n                this.clickedOptions = no;\n            }\n        },\n        changePageNo(no) {\n            this.pageNo = no;\n        },\n        decrease() {\n            if (this.pageNo > 0) {\n                this.pageNo -= 1;\n            }\n        },\n        increase() {\n            if (this.pageNo < this.totalNumberOfPages) {\n                this.pageNo += 1;\n            }\n        },\n        makeEdit(index) {\n            if (!this.notFilled) {\n                this.editUser(index, \"edit\", {\n                    eventName: this.edit.eventName,\n                    contactName: this.edit.contactName,\n                    phoneNumber: this.edit.phoneNumber,\n                    maxTickets: this.edit.maxTickets,\n                    description: this.edit.description,\n                    location: this.edit.location,\n                    status: this.edit.status,\n                });\n\n                this.editOn = false;\n            }\n        },\n        showModal() {\n            this.modalOn = true;\n        },\n        hideModal() {\n            this.modalOn = false;\n        },\n        turnEditOn() {\n            this.editOn = true;\n        },\n        hideEditModal() {\n            this.editOn = false;\n        },\n    },\n};\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;uBAAxBC,mBAAA,CAEM,OAFNC,UAEM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}