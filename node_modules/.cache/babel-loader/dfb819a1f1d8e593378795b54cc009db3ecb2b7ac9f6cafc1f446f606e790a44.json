{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { useAttrs } from \"vue\";\nimport Modal from \"./Modal.vue\";\nexport default {\n  components: {\n    Modal: Modal\n  },\n  props: [\"user\", \"editUser\", \"addEvent\"],\n  data: function data() {\n    return {\n      clickedOptions: NaN,\n      pageNo: 0,\n      modalOn: false,\n      editOn: false,\n      edit: {\n        eventName: \"\",\n        contactName: \"\",\n        phoneNumber: \"\",\n        maxTickets: \"\",\n        description: \"\",\n        location: \"\",\n        status: \"\"\n      }\n    };\n  },\n  computed: {\n    totalNumberOfPages: function totalNumberOfPages() {\n      return Math.floor((this.user.allTickets.length - 1) / 5);\n    },\n    notFilled: function notFilled() {\n      return !this.edit.eventName || !this.edit.contactName || !this.edit.phoneNumber || !this.edit.maxTickets || !this.edit.description || !this.edit.location || !this.edit.status;\n    },\n    navArray: function navArray() {\n      var arr = [];\n      for (var i = 0; i < this.totalNumberOfPages + 1; i++) {\n        arr.push(i);\n      }\n      return arr;\n    }\n  },\n  methods: {\n    clickOptions: function clickOptions(no) {\n      if (this.clickedOptions == no) {\n        this.clickedOptions = 6;\n      } else {\n        this.clickedOptions = no;\n      }\n    },\n    changePageNo: function changePageNo(no) {\n      this.pageNo = no;\n    },\n    decrease: function decrease() {\n      if (this.pageNo > 0) {\n        this.pageNo -= 1;\n      }\n    },\n    increase: function increase() {\n      if (this.pageNo < this.totalNumberOfPages) {\n        this.pageNo += 1;\n      }\n    },\n    makeEdit: function makeEdit(index) {\n      if (!this.notFilled) {\n        this.editUser(index, \"edit\", {\n          eventName: this.edit.eventName,\n          contactName: this.edit.contactName,\n          phoneNumber: this.edit.phoneNumber,\n          maxTickets: this.edit.maxTickets,\n          description: this.edit.description,\n          location: this.edit.location,\n          status: this.edit.status\n        });\n        this.editOn = false;\n      }\n    },\n    showModal: function showModal() {\n      this.modalOn = true;\n    },\n    hideModal: function hideModal() {\n      this.modalOn = false;\n    },\n    turnEditOn: function turnEditOn() {\n      this.editOn = true;\n    },\n    hideEditModal: function hideEditModal() {\n      this.editOn = false;\n    }\n  }\n};","map":{"version":3,"names":["useAttrs","Modal","components","props","data","clickedOptions","NaN","pageNo","modalOn","editOn","edit","eventName","contactName","phoneNumber","maxTickets","description","location","status","computed","totalNumberOfPages","Math","floor","user","allTickets","length","notFilled","navArray","arr","i","push","methods","clickOptions","no","changePageNo","decrease","increase","makeEdit","index","editUser","showModal","hideModal","turnEditOn","hideEditModal"],"sources":["/home/nate/Documents/repos/Admin-Dashboard-santimpay/src/components/EventContent.vue"],"sourcesContent":["<template>\n    <div class=\"event-content\">\n        <div class=\"top\">\n            <div class=\"title\">Events</div>\n            <div\n                class=\"create-button\"\n                @click=\"showModal\"\n            >\n                <img\n                    src=\"../../public/assets/add.svg\"\n                    alt=\"\"\n                />\n                <div class=\"text\">Create Event</div>\n            </div>\n        </div>\n        <div class=\"middle\">\n            <div class=\"total\">\n                <div class=\"top-ticket\">\n                    <svg\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M19.5 12.5C19.5 11.12 20.62 10 22 10V9C22 5 21 4 17 4H7C3 4 2 5 2 9V9.5C3.38 9.5 4.5 10.62 4.5 12C4.5 13.38 3.38 14.5 2 14.5V15C2 19 3 20 7 20H17C21 20 22 19 22 15C20.62 15 19.5 13.88 19.5 12.5Z\"\n                            stroke=\"#171625\"\n                            stroke-width=\"1.5\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                        />\n                        <path\n                            d=\"M10 4L10 20\"\n                            stroke=\"#171625\"\n                            stroke-width=\"1.5\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-dasharray=\"5 5\"\n                        />\n                    </svg>\n                    <div class=\"title\">Total Tickets</div>\n                </div>\n                <div class=\"bottom\">{{ user.totalEvents }}</div>\n            </div>\n            <div class=\"active\">\n                <div class=\"top-ticket\">\n                    <svg\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M19.5 12.5C19.5 11.12 20.62 10 22 10V9C22 5 21 4 17 4H7C3 4 2 5 2 9V9.5C3.38 9.5 4.5 10.62 4.5 12C4.5 13.38 3.38 14.5 2 14.5V15C2 19 3 20 7 20H17C21 20 22 19 22 15C20.62 15 19.5 13.88 19.5 12.5Z\"\n                            stroke=\"#171625\"\n                            stroke-width=\"1.5\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                        />\n                        <path\n                            d=\"M10 4L10 20\"\n                            stroke=\"#171625\"\n                            stroke-width=\"1.5\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-dasharray=\"5 5\"\n                        />\n                    </svg>\n                    <div class=\"title\">Active Tickets</div>\n                </div>\n                <div class=\"bottom\">{{ user.eventsActive }}</div>\n            </div>\n            <div class=\"expired\">\n                <div class=\"top-ticket\">\n                    <svg\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M19.5 12.5C19.5 11.12 20.62 10 22 10V9C22 5 21 4 17 4H7C3 4 2 5 2 9V9.5C3.38 9.5 4.5 10.62 4.5 12C4.5 13.38 3.38 14.5 2 14.5V15C2 19 3 20 7 20H17C21 20 22 19 22 15C20.62 15 19.5 13.88 19.5 12.5Z\"\n                            stroke=\"#171625\"\n                            stroke-width=\"1.5\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                        />\n                        <path\n                            d=\"M10 4L10 20\"\n                            stroke=\"#171625\"\n                            stroke-width=\"1.5\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-dasharray=\"5 5\"\n                        />\n                    </svg>\n                    <div class=\"title\">Expired Tickets</div>\n                </div>\n                <div class=\"bottom\">{{ user.eventsInactive }}</div>\n            </div>\n        </div>\n        <div class=\"bottom\">\n            <div class=\"title\">All Events</div>\n            <div class=\"table\">\n                <table class=\"table-container\">\n                    <tr class=\"columns\">\n                        <th>Image</th>\n                        <th>Event Name</th>\n                        <th>Contact Name</th>\n                        <th>Phone Number</th>\n                        <th>Max Tickets</th>\n                        <th>Description</th>\n                        <th>Location</th>\n                        <th>Status</th>\n                    </tr>\n                    <tr v-for=\"(ticket, index) in user.allTickets\">\n                        <td v-if=\"index >= (pageNo * 5) && index < ((pageNo * 5) + 5)\">\n                            <img\n                                :src=\"`${ticket.image}`\"\n                                alt=\"\"\n                            />\n                        </td>\n                        <td v-if=\"index >= (pageNo * 5) && index < ((pageNo * 5) + 5)\">\n                            {{ ticket.eventName }}\n                        </td>\n                        <td v-if=\"index >= (pageNo * 5) && index < ((pageNo * 5) + 5)\">\n                            {{ ticket.contactName }}\n                        </td>\n                        <td v-if=\"index >= (pageNo * 5) && index < ((pageNo * 5) + 5)\">\n                            {{ ticket.phoneNumber }}\n                        </td>\n                        <td v-if=\"index >= (pageNo * 5) && index < ((pageNo * 5) + 5)\">\n                            {{ ticket.maxTickets }}\n                        </td>\n                        <td v-if=\"index >= (pageNo * 5) && index < ((pageNo * 5) + 5)\">\n                            {{ ticket.description.substring(0, 26) }}\n                            <span\n                                class=\"more\"\n                                :class=\"{\n                                    notVisible: !(\n                                        ticket.description.length > 26\n                                    ),\n                                }\"\n                            >\n                                ...<span class=\"colored\">More</span>\n                                <span class=\"popout\">\n                                    {{ ticket.description }}</span\n                                >\n                            </span>\n                        </td>\n                        <td v-if=\"index >= (pageNo * 5) && index < ((pageNo * 5) + 5)\">\n                            {{ ticket.location }}\n                        </td>\n                        <td v-if=\"index >= (pageNo * 5) && index < ((pageNo * 5) + 5)\">\n                            <span\n                                class=\"statusactive\"\n                                :class=\"{\n                                    statusactive: ticket.status == 'active',\n                                    statusexpired: ticket.status == 'expired',\n                                }\"\n                                >{{ ticket.status }}</span\n                            >\n                            <div\n                                class=\"img-container\"\n                                @click=\"clickOptions(index)\"\n                                :class=\"{ clicked: clickedOptions === index }\"\n                            >\n                                <img\n                                    src=\"../../public/assets/threeDots.svg\"\n                                    alt=\"\"\n                                />\n                            </div>\n                            <div\n                                class=\"options\"\n                                :class=\"{\n                                    notVisible: !(clickedOptions === index),\n                                }\"\n                            >\n                                <div\n                                    class=\"edit\"\n                                    @click=\"turnEditOn\"\n                                >\n                                    <img\n                                        src=\"../../public/assets/edit.svg\"\n                                        alt=\"\"\n                                    />\n                                    <div class=\"text\">Edit</div>\n                                </div>\n                                <div\n                                    class=\"delete\"\n                                    @click=\"editUser(index, 'delete')\"\n                                >\n                                    <img\n                                        src=\"../../public/assets/trash.svg\"\n                                        alt=\"\"\n                                    />\n                                    <div class=\"text\">Delete</div>\n                                </div>\n                            </div>\n                            <div\n                                class=\"edit-modal\"\n                                :class=\"{\n                                    notDisplay: index != pageNo || !editOn,\n                                }\"\n                            >\n                                <div class=\"edit-container\">\n                                    <div class=\"title\">\n                                        <div class=\"text\">Edit</div>\n                                        <img\n                                            @click=\"hideEditModal\"\n                                            src=\"../../public/assets/close.svg\"\n                                            alt=\"\"\n                                        />\n                                    </div>\n\n                                    <div class=\"event-name\">\n                                        <label for=\"\">Event Name</label>\n                                        <input\n                                            type=\"text\"\n                                            v-model=\"edit.eventName\"\n                                        />\n                                    </div>\n                                    <div class=\"contact-name\">\n                                        <label for=\"\">Contact Name</label>\n                                        <input\n                                            type=\"text\"\n                                            v-model=\"edit.contactName\"\n                                        />\n                                    </div>\n                                    <div class=\"phone-number\">\n                                        <label for=\"\">Phone Number</label>\n                                        <input\n                                            type=\"text\"\n                                            v-model=\"edit.phoneNumber\"\n                                        />\n                                    </div>\n                                    <div class=\"max-tickets\">\n                                        <label for=\"\">Max Tickets</label>\n                                        <input\n                                            type=\"text\"\n                                            v-model=\"edit.maxTickets\"\n                                        />\n                                    </div>\n                                    <div class=\"description\">\n                                        <label for=\"\">Description</label>\n                                        <input\n                                            type=\"text\"\n                                            v-model=\"edit.description\"\n                                        />\n                                    </div>\n                                    <div class=\"location\">\n                                        <label for=\"\">Location</label>\n                                        <input\n                                            type=\"text\"\n                                            v-model=\"edit.location\"\n                                        />\n                                    </div>\n                                    <div class=\"status\">\n                                        <label for=\"\">Status</label>\n                                        <input\n                                            type=\"text\"\n                                            v-model=\"edit.status\"\n                                        />\n                                    </div>\n                                    <div\n                                        class=\"submit\"\n                                        :class=\"{ notFully: notFilled }\"\n                                        @click=\"makeEdit(index)\"\n                                    >\n                                        Submit\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n                <div class=\"pagesNav\">\n                    <div class=\"pagesNavLeft\">\n                        <div class=\"showing\">Showing Page</div>\n                        <div class=\"page-number\">{{ pageNo + 1 }}</div>\n                        <div class=\"out-of\">\n                            Out of {{ totalNumberOfPages + 1 }}\n                        </div>\n                    </div>\n                    <div class=\"pagesNavRight\">\n                        <div\n                            @click=\"decrease\"\n                            class=\"arrowContainer\"\n                        >\n                        <svg class=\"arrow\" width=\"7\" height=\"12\" viewBox=\"0 0 7 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.56603 0.558058C6.83216 0.802136 6.83216 1.19786 6.56603 1.44194L2.07812 5.55806C1.812 5.80214 1.812 6.19786 2.07813 6.44194L6.56603 10.5581C6.83216 10.8021 6.83216 11.1979 6.56603 11.4419C6.29991 11.686 5.86844 11.686 5.60231 11.4419L1.1144 7.32583C0.316033 6.59359 0.316031 5.40641 1.1144 4.67418L5.60231 0.558058C5.86844 0.313981 6.29991 0.313981 6.56603 0.558058Z\" fill=\"#171625\"/>\n</svg>\n\n                        </div>\n                        <div\n                            class=\"pageNos\"\n                            v-for=\"(page, index) in navArray\"\n                        >\n                            <div\n                                class=\"page\"\n                                @click=\"changePageNo(index)\"\n                                :class=\"{ selected: pageNo == index }\"\n                            >\n                                {{ `${index + 1}` }}\n                            </div>\n                        </div>\n\n                        <div\n                            class=\"arrowContainer\"\n                            @click=\"increase\"\n                        >\n                        <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.07459 11.4419C0.808469 11.1979 0.808469 10.8021 1.07459 10.5581L5.5625 6.44194C5.82863 6.19786 5.82863 5.80214 5.5625 5.55806L1.07459 1.44194C0.80847 1.19786 0.80847 0.802137 1.07459 0.558058C1.34072 0.313981 1.77219 0.313981 2.03831 0.558058L6.52622 4.67418C7.32459 5.40641 7.32459 6.59359 6.52622 7.32582L2.03831 11.4419C1.77219 11.686 1.34072 11.686 1.07459 11.4419Z\" fill=\"#171625\"/>\n</svg>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <modal\n        :modal-on=\"modalOn\"\n        :hide-modal=\"hideModal\"\n        :add-event=\"addEvent\"\n    ></modal>\n</template>\n\n<script>\nimport { useAttrs } from \"vue\";\nimport Modal from \"./Modal.vue\";\n\nexport default {\n    components: {\n        Modal,\n    },\n    props: [\"user\", \"editUser\", \"addEvent\"],\n    data() {\n        return {\n            clickedOptions: NaN,\n            pageNo: 0,\n            modalOn: false,\n            editOn: false,\n            edit: {\n                eventName: \"\",\n                contactName: \"\",\n                phoneNumber: \"\",\n                maxTickets: \"\",\n                description: \"\",\n                location: \"\",\n                status: \"\",\n            },\n        };\n    },\n    computed: {\n        totalNumberOfPages() {\n            return Math.floor((this.user.allTickets.length - 1) / 5);\n        },\n        notFilled() {\n            return (\n                !this.edit.eventName ||\n                !this.edit.contactName ||\n                !this.edit.phoneNumber ||\n                !this.edit.maxTickets ||\n                !this.edit.description ||\n                !this.edit.location ||\n                !this.edit.status\n            );\n        },\n        navArray() {\n            let arr = [];\n            for (let i = 0; i < this.totalNumberOfPages + 1; i++) {\n                arr.push(i);\n            }\n            return arr;\n        },\n    },\n    methods: {\n        clickOptions(no) {\n            if (this.clickedOptions == no) {\n                this.clickedOptions = 6;\n            } else {\n                this.clickedOptions = no;\n            }\n        },\n        changePageNo(no) {\n            this.pageNo = no;\n        },\n        decrease() {\n            if (this.pageNo > 0) {\n                this.pageNo -= 1;\n            }\n        },\n        increase() {\n            if (this.pageNo < this.totalNumberOfPages) {\n                this.pageNo += 1;\n            }\n        },\n        makeEdit(index) {\n            if (!this.notFilled) {\n                this.editUser(index, \"edit\", {\n                    eventName: this.edit.eventName,\n                    contactName: this.edit.contactName,\n                    phoneNumber: this.edit.phoneNumber,\n                    maxTickets: this.edit.maxTickets,\n                    description: this.edit.description,\n                    location: this.edit.location,\n                    status: this.edit.status,\n                });\n\n                this.editOn = false;\n\n            }\n        },\n        showModal() {\n            this.modalOn = true;\n        },\n        hideModal() {\n            this.modalOn = false;\n        },\n        turnEditOn() {\n            this.editOn = true;\n        },\n        hideEditModal() {\n            this.editOn = false;\n        },\n    },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}