{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_login_page = _resolveComponent(\"login-page\");\n  const _component_dashboard = _resolveComponent(\"dashboard\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_ctx.pageNo == 0 ? (_openBlock(), _createBlock(_component_login_page, {\n    key: 0,\n    \"current-input\": _ctx.currentInput,\n    \"check-user\": _ctx.checkUser\n  }, null, 8 /* PROPS */, [\"current-input\", \"check-user\"])) : _createCommentVNode(\"v-if\", true), _ctx.user ? (_openBlock(), _createBlock(_component_dashboard, {\n    key: 1,\n    user: _ctx.user,\n    \"edit-user\": _ctx.editUser,\n    \"add-event\": _ctx.addEvent\n  }, null, 8 /* PROPS */, [\"user\", \"edit-user\", \"add-event\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_ctx","pageNo","_createBlock","_component_login_page","key","currentInput","checkUser","_createCommentVNode","user","_component_dashboard","editUser","addEvent"],"sources":["/home/nate/Documents/repos/Admin-Dashboard-santimpay/admin-dashboard/src/App.vue"],"sourcesContent":["<template v-if=\"users\">\n    <login-page\n        :current-input=\"currentInput\"\n        :check-user=\"checkUser\"\n        v-if=\"pageNo == 0\"\n    ></login-page>\n    <dashboard\n        v-if=\"user\"\n        :user=\"user\"\n        :edit-user=\"editUser\"\n        :add-event=\"addEvent\"\n    ></dashboard>\n</template>\n\n<script>\nimport LoginPage from \"./components/LoginPage.vue\";\nimport Dashboard from \"./components/Dashboard.vue\";\n\nexport default {\n    name: \"App\",\n    components: {\n        LoginPage,\n        Dashboard,\n    },\n    data() {\n        return {\n            users: [],\n            currentInput: {\n                accountName: \"\",\n                accountPassword: \"\",\n            },\n            userIndex: 0,\n            pageNo: 1,\n        };\n    },\n    created() {\n        this.getPages();\n    },\n    computed: {\n        user() {\n            return this.users[this.userIndex];\n        },\n    },\n    methods: {\n        async getPages() {\n            let res = await fetch(\"users.json\");\n            let data = await res.json();\n\n            this.users = data;\n        },\n        checkUser(name, pass) {\n            this.users.forEach((user, index) => {\n                let correctInput = false;\n                if (\n                    (user.email == name || user.phoneNumber == name) &&\n                    user.password == pass\n                ) {\n                    this.userIndex = index;\n                    correctInput = true;\n                }\n\n                if (!correctInput) {\n                    alert(\"incorrect input\");\n                } else {\n                    this.pageNo = 1;\n                }\n            });\n        },\n        editUser(index, option, edit) {\n            if (option === \"delete\") {\n                this.user.allTickets.splice(index, 1);\n                return;\n            }\n\n            if (option === \"edit\") {\n                this.user.allTickets.splice(index, 1, {\n                    image: \"./assets/image.svg\",\n                    eventName: edit.eventName,\n                    contactName: edit.contactName,\n                    phoneNumber: edit.phoneNumber,\n                    maxTickets: edit.maxTickets,\n                    description: edit.description,\n                    location: edit.location,\n                    status: edit.status,\n                });\n            }\n        },\n        addEvent(dataObj) {\n          console.log()\n          this.user.allTickets.push.dataObj);\n        }\n    },\n};\n</script>\n"],"mappings":";;;;uBAAAA,mBAAA,CAAAC,SAAA,SAIcC,IAAA,CAAAC,MAAM,S,cAHhBC,YAAA,CAIcC,qBAAA;IALlBC,GAAA;IAES,eAAa,EAAEJ,IAAA,CAAAK,YAAY;IAC3B,YAAU,EAAEL,IAAA,CAAAM;8DAHrBC,mBAAA,gBAOcP,IAAA,CAAAQ,IAAI,I,cADdN,YAAA,CAKaO,oBAAA;IAXjBL,GAAA;IAQSI,IAAI,EAAER,IAAA,CAAAQ,IAAI;IACV,WAAS,EAAER,IAAA,CAAAU,QAAQ;IACnB,WAAS,EAAEV,IAAA,CAAAW;iEAVpBJ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}